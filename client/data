// let categoryDisplayName = req.params.categoryname
//     const search = req.query.search
//     const querydate = req.query.filterdate
//     const today = new Date()
//     const currentDay = moment().format('dddd').toLowerCase()

// try {
//     let events;
//     if (categoryDisplayName != "events") {
//         let query

//         if (querydate == undefined || querydate == null || querydate == "") {
            
//             query = {
//                 // type: 'event',
//                 archived: false,
//                 verified: true,
//                 type: 'event',
//                 $or: [
//                     {
//                         'date.dateRange.endDate': { $gte: todayDate }
//                     },
//                     {
//                         'date.dateRange.endDate': null
//                     }
//                     ,
//                     {
//                         $and: [
//                             {
//                                 $or: [
//                                     {
//                                         'date.recurring.endDate': { $gte: todayDate },
//                                         'date.recurring.days': { $in: day } // Replace with a function to get today's day

//                                     },
//                                     {
//                                         'date.recurring.endDate': { $gte: null },
//                                         'date.recurring.days': { $in: day } // Replace with a function to get today's day
//                                     }
//                                 ]
//                             },
//                         ]
//                     },
//                 ],
//             }
//         }
//         // else {
            
//         //     query = {
//         //         archived: false,
//         //         verified: true,
//         //         $or: [
//         //             {
//         //                 'date.dateRange.startDate': { $lte: filterDate2 },
//         //                 'date.dateRange.endDate': { $gte: filterDate }
//         //             },
//         //             {
//         //                 'date.dateRange.startDate': { $lte: filterDate },
//         //                 'date.dateRange.endDate': null
//         //             }
//         //             ,
//         //             {
//         //                 $and: [
//         //                     {
//         //                         $or: [
//         //                             {
//         //                                 'date.recurring.startDate': { $lte: filterDate2 },
//         //                                 'date.recurring.endDate': { $gte: filterDate },
//         //                                 'date.recurring.days': { $in: [currentDay] } // Replace with a function to get today's day
//         //                             },
//         //                             {
//         //                                 'date.recurring.startDate': { $lte: filterDate2 },
//         //                                 'date.recurring.endDate': { $gte: null },
//         //                                 'date.recurring.days': { $in: [currentDay] } // Replace with a function to get today's day
//         //                             }
//         //                         ]
//         //                     },
//         //                 ]
//         //             },
//         //         ],
//         //     }

//         // }

//         // console.log(categoryDisplayName)
//         let categoriesWithEvents = await CategoryModel.find({ categoryURL: categoryDisplayName }).populate({
//             path: 'events',
//             populate: {
//                 path: 'location',
//             },
//             match: query,
//         })

//         // console.log("all event catgories", categoriesWithEvents)

//         events = categoriesWithEvents.reduce((acc, category) => {
//             acc.push(...category.events);
//             return acc;
//         }, [])

//     } else {
//         let today;
//         if (querydate == undefined || querydate == null || querydate == "") {
//             today = new Date();
//         } else {
//             today = new Date(querydate);
//         }
//         const day = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];
//         // const filterdate = new Date(querydate)
//         let query = {
//             archived: false,
//             verified: true,
//             $or: [
//                 {
//                     'date.dateRange.endDate': { $gte: today }
//                 },
//                 {
//                     'date.dateRange.endDate': null
//                 },
//                 {
//                     $and: [
//                         {
//                             $or: [
//                                 {
//                                     'date.recurring.endDate': { $gte: today },
//                                     'date.recurring.days': { $in: day }
//                                 },
//                                 {
//                                     'date.recurring.endDate': { $gte: null },
//                                     'date.recurring.days': { $in: day }
//                                 }
//                             ]
//                         },
//                     ]
//                 },
//             ],
//         };

//         // console.log("query before search block", query)
//         // console.log("this is search --> ", search)
//         if (search == undefined || search == 'undefined' || search == null) {
//             // console.log("did noting")
//         } else {
//             query.$and = query.$and || [];

//             // Fuzzy search with case-insensitivity
//             const fuzzySearchPattern = search.split('').join('.*?');
//             const regex = new RegExp(fuzzySearchPattern, 'i');

//             // Add search conditions for category name, description, and title
//             query.$and.push({
//                 $or: [
//                     { 'description': { $regex: regex } }, // Use the regex variable here
//                     { 'title': { $regex: regex } },
//                     { 'eventCategory': { $in: [regex] } }, // Use an array with $in for an exact match
//                     { 'features': { $in: [regex] } }
//                 ]
//             });
//         }

//         // console.log("query after if block", query);
//         events = await eventService.findAllEvents(query);
//     }


//     return res.status(statusCode.SUCCESS.code).json({
//         success: true,
//         data: events
//     })
// }


// 2nd march --> linked list 2 videos
// 3rd march --> stacks and queues 
// 4th march --> trees 

// 3 days 1 topic --> 10 - 12 - 15 sums 

// 1st week -> arrays/searching/sorting/strings
// 2nd week -> linked list
// 3rd week -> stacks queues 
// 4th week -> trees